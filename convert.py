import re

phonepattern = re.compile(r'([\"%]{0,2})(.+)(:?)')

mapping = {
    'aU': 'A}',
    '@U': 'A}',
    '2}': 'A}',
    'eI': '{i',
    '}i': 'Oy',
    'ui': 'Oy',
    'c': 'C',
    'J\\': 'd',
    '?': '',
    'w': 'O',
    'z': 's',
    'Z': 'S',
    'c__C': 'C',
    't__S': 'tS', # i.e. two phones in NB tale
    'd__Z': 'C',
    'T': 'f', # English th to f.
    'D': 'd',
    'x': 'h',
    '4': 'r', # for some reason, 'r' is not in itself a phone in NB tale
    'R': 'r',
    'r\\': 'r',
    'J': 'n', # NTNU: should be changed
    'L': 'l', # NTNU: should be changed
    'r`': 'l', # i.e. no "thick l"
    'l_=': 'l', # i.e. no marking of syllabic consonants. You might consider keeping some of them
    'l`_=': 'l`',
    'm_=': 'm',
    'n_=': 'n',
    'n`_=': 'n`',
    '4_=': 'r',
    'J_=': 'n', # See comment for J
    'L_=': 'l',
    'R_=': 'r',
    'N_=': 'N',
    'r\\_=': 'r',
    's_=': 's',
    't`_=': 't`',
    'v_=': 'v',
}

def convert(phone):
    match = phonepattern.match(phone)
    if match.group(2) in mapping.keys():
        mapped = mapping[match.group(2)]
        return phonepattern.sub(f'\1{mapped}\3', phone)
    else:
        return phone

if __name__ == "__main__":
        nbtsymbols = [
        '""2',
        '""2:',
        '""2y',
        '""2}',
        '""A',
        '""A:',
        '""Ai',
        '""A}',
        '""O',
        '""O:',
        '""Oy',
        '""aU',
        '""e',
        '""e:',
        '""eI',
        '""i',
        '""i:',
        '""n`_=',
        '""u',
        '""u:',
        '""y',
        '""y:',
        '""{',
        '""{:',
        '""{i',
        '""}',
        '""}:',
        '""}i',
        '"2',
        '"2:',
        '"2y',
        '"2}',
        '"3:',
        '"@U',
        '"A',
        '"A:',
        '"Ai',
        '"A}',
        '"O',
        '"O:',
        '"Oy',
        '"U',
        '"U:',
        '"V',
        '"aU',
        '"e',
        '"e:',
        '"eI',
        '"i',
        '"i:',
        '"l_=',
        '"m_=',
        '"n_=',
        '"u',
        '"u:',
        '"y',
        '"y:',
        '"{',
        '"{:',
        '"{i',
        '"}',
        '"}:',
        '"}i',
        '%2',
        '%2:',
        '%2y',
        '%2}',
        '%3:',
        '%@U',
        '%A',
        '%A:',
        '%Ai',
        '%A}',
        '%O',
        '%O:',
        '%Oy',
        '%U:',
        '%V',
        '%aU',
        '%e',
        '%e:',
        '%eI',
        '%i',
        '%i:',
        '%n',
        '%u',
        '%u:',
        '%y',
        '%y:',
        '%{',
        '%{:',
        '%{i',
        '%}',
        '%}:',
        '%}i',
        '2',
        '2:',
        '2y',
        '2}',
        '4',
        '4_=',
        '<end>',
        '<exhale>',
        '<fp>',
        '<inhale>',
        '<nasal>',
        '<sil>',
        '<start>',
        '<vowel>',
        '?',
        '@',
        '@U',
        'A',
        'A:',
        'Ai',
        'A}',
        'C',
        'D',
        'J',
        'J\\',
        'J_=',
        'L',
        'L_=',
        'N',
        'N_=',
        'O',
        'O:',
        'Oy',
        'R',
        'R_=',
        'S',
        'T',
        'U',
        'U:',
        'V',
        'Z',
        'aU',
        'b',
        'c',
        'c__C',
        'd',
        'd__Z',
        'd`',
        'e',
        'e:',
        'eI',
        'f',
        'g',
        'h',
        'i',
        'i:',
        'j',
        'k',
        'l',
        'l_=',
        'l`',
        'l`_=',
        'm',
        'm_=',
        'n',
        'n_=',
        'n`',
        'n`_=',
        'p',
        'r\\',
        'r\\_=',
        'r`',
        's',
        's_=',
        't',
        't__S',
        't`',
        'u',
        'u:',
        'v',
        'v_=',
        'w',
        'x',
        'y',
        'y:',
        'z',
        '{',
        '{:',
        '{i',
        '}',
        '}:',
        '}i'
    ]
        for phone in nbtsymbols:
            print(phone, convert(phone))

